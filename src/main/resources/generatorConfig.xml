<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 设置数据库驱动文件 -->
    <classPathEntry
            location="F:\repo\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar"/>

    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!-- 这里引入扩展插件 -->
        <!--  <plugin type="org.mybatis.generator.plugins.MySqlPaginationPlugin" />-->

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 数据库连接信息 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/wxzone"
                        userId="root" password="123456"/>

        <!--  默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
         true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model文件保存位置 -->
        <javaModelGenerator targetPackage="com.wxzone.www.entity"
                            targetProject="F:\entity">

            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格  -->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>

        <!-- 生成的mapper文件 -->
        <sqlMapGenerator targetPackage="com.wxzone.www.dao.impl"
                         targetProject="F:\entity">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>


        <!-- 生成dao接口 -->
        <javaClientGenerator type="XMLMAPPER"  targetPackage="com.wxzone.www.dao"
                             targetProject="F:\entity">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名 -->
        <table schema="loan" tableName="op_user_question" domainObjectName="OpUserQuestion"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false">

        </table>
    </context>
</generatorConfiguration>

        <!--
                table其他属性：
                enableCountByExample="false"
                enableUpdateByExample="false"
                enableDeleteByExample="false"
                enableSelectByExample="false"
                selectByExampleQueryId="false"
                schema即为数据库名, tableName为对应的数据库表, domainObjectName是要生成的实体类,
                如果想要mapper配置文件加入sql的where条件查询, 可以将enableCountByExample等设为true,
                这样就会生成一个对应domainObjectName的Example类, enableCountByExample等设为false时,
                就不会生成对应的Example类了.

                如果table里边不配置property，默认字段都生成为类属性。
        <ignoreColumn column="FRED" />//忽略字段
        <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />//无论字段是什么类型，生成的类属性都是varchar。
        -->
        <!--
        java -jar E:\job\workspace\jee\finance\src\mapper\mybatis-generator-core-1.3.2\lib\mybatis-generator-core-1.3.2.jar -configfile E:\job\workspace\jee\finance\src\mapper\generatorConfig.xml -overwrite
        -->